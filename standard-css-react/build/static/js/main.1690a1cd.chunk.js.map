{"version":3,"sources":["utils/getColor.js","utils/themeContext.js","styles/variables.js","components/Heading.js","components/LinkButton.js","components/Details.js","components/Logo.js","components/Card.js","components/ThemeSwitcher.js","App.js","index.js"],"names":["getColor","variable","window","getComputedStyle","document","body","getPropertyValue","React","createContext","Consumer","withTheme","Component","props","react_default","a","createElement","theme","Object","assign","ThemeProvider","Provider","THEMES","light","dark","Heading","_ref","bottomColor","topColor","width","height","viewBox","preserveAspectRatio","id","x1","y1","x2","y2","offset","style","stopColor","d","fill","displayName","defaultProps","LINK_BUTTON_VARIANTS","ns","LinkButton","_cx","variant","classNames","cx","concat","defineProperty","children","className","Details","map","child","key","Logo","alt","Card","_cx2","sideFrontClassNames","sideBackClassNames","colorGradient2","colorGradient4","colorScPink","colorScOrange","components_Heading","src_components_Logo","src","src_components_Details","src_components_LinkButton","href","target","ThemeSwitcher","onThemeChange","switchClassNames","onClick","App","state","handleThemeChange","_this","setState","prevState","this","value","src_components_Card","src_components_ThemeSwitcher","ReactDOM","render","src_App_0","getElementById"],"mappings":"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","file":"static/js/main.1690a1cd.chunk.js","sourcesContent":["/* globals window */\nexport const getColor = variable => window\n  .getComputedStyle(window.document.body)\n  .getPropertyValue(variable);\n","import React from 'react';\n\nconst { Consumer, Provider } = React.createContext();\n\n// eslint-disable-next-line react/display-name\nconst withContext = () => Component => props => (\n  <Consumer>\n    {theme => <Component {...props} theme={theme} />}\n  </Consumer>\n);\n\nexport const withTheme = withContext();\nexport const ThemeProvider = Provider;\n","export const THEMES = {\n  light: 'light',\n  dark: 'dark',\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst displayName = 'Heading';\n\nconst propTypes = {\n  bottomColor: PropTypes.string,\n  topColor: PropTypes.string,\n};\n\nconst defaultProps = {\n  bottomColor: '#000',\n  topColor: '#FFF',\n};\n\nconst Heading = ({ bottomColor, topColor }) => (\n  <svg width=\"100%\" height=\"100%\" viewBox=\"0 0 100 100\" preserveAspectRatio=\"none\">\n    <defs>\n      <linearGradient id=\"heading-linear-gradient\" x1=\"-1%\" y1=\"100%\" x2=\"101%\" y2=\"0%\">\n        <stop offset=\"0%\" style={{ stopColor: bottomColor }} />\n        <stop offset=\"100%\" style={{ stopColor: topColor }} />\n      </linearGradient>\n    </defs>\n    <g>\n      <path d=\"M0 0 L0 100 L100 80 L100 0 Z\" fill=\"url(#heading-linear-gradient)\" />\n    </g>\n  </svg>\n);\n\nHeading.displayName = displayName;\nHeading.propTypes = propTypes;\nHeading.defaultProps = defaultProps;\n\nexport default Heading;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\n\nimport { withTheme } from '../utils/themeContext';\nimport { THEMES } from '../styles/variables';\n\nimport './LinkButton.css';\n\nexport const LINK_BUTTON_VARIANTS = {\n  transparent: 'transparent',\n  transparentDark: 'transparentDark',\n  default: 'default',\n};\n\nconst ns = 'link-button';\nconst displayName = 'LinkButton';\n\nconst propTypes = {\n  variant: PropTypes.string,\n  theme: PropTypes.string.isRequired,\n  children: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.node),\n    PropTypes.node,\n  ]).isRequired,\n};\n\nconst defaultProps = {\n  variant: 'default',\n};\n\nconst LinkButton = (props) => {\n  const { theme, variant } = props;\n  const classNames = cx(\n    [`${ns}`],\n    {\n      [`${ns}--${variant}--light`]: theme === THEMES.light,\n      [`${ns}--${variant}--dark`]: theme === THEMES.dark,\n    },\n  );\n\n  const { children } = props;\n  return <a className={classNames} {...props}>{children}</a>;\n};\n\nLinkButton.displayName = displayName;\nLinkButton.propTypes = propTypes;\nLinkButton.defaultProps = defaultProps;\n\nexport default withTheme(LinkButton);\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './Details.css';\n\nconst ns = 'details';\n\nconst displayName = 'Details';\n\nconst propTypes = {\n  children: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.node),\n    PropTypes.node,\n  ]).isRequired,\n};\n\nconst Details = ({ children }) => (\n  <ul className={ns}>\n    {children.map(child => <li className={`${ns}__item`} key={child.props.children}>{child}</li>)}\n  </ul>\n);\n\nDetails.displayName = displayName;\nDetails.propTypes = propTypes;\n\nexport default Details;\n","import React from 'react';\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\n\nimport { withTheme } from '../utils/themeContext';\nimport { THEMES } from '../styles/variables';\n\nimport './Logo.css';\n\nconst ns = 'logo';\nconst displayName = 'Logo';\n\nconst propTypes = {\n  theme: PropTypes.string.isRequired,\n  alt: PropTypes.string.isRequired,\n};\n\nconst Logo = (props) => {\n  const { theme, alt } = props;\n  const classNames = cx(\n    [`${ns}`],\n    {\n      [`${ns}--light`]: theme === THEMES.light,\n      [`${ns}--dark`]: theme === THEMES.dark,\n    },\n  );\n  return (\n    <img className={classNames} alt={alt} {...props} />);\n};\n\nLogo.displayName = displayName;\nLogo.propTypes = propTypes;\n\nexport default withTheme(Logo);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\n\nimport { getColor } from '../utils/getColor';\nimport { withTheme } from '../utils/themeContext';\nimport {\n  THEMES,\n} from '../styles/variables';\n\nimport Heading from './Heading';\nimport LinkButton, { LINK_BUTTON_VARIANTS } from './LinkButton';\nimport Details from './Details';\nimport Logo from './Logo';\n\nimport './Card.css';\n\nconst ns = 'card';\nconst displayName = 'Card';\n\nconst propTypes = {\n  theme: PropTypes.string.isRequired,\n};\n\nconst Card = ({ theme }) => {\n  const sideFrontClassNames = cx(\n    `${ns}__side`,\n    `${ns}__side__front`,\n    {\n      [`${ns}__side__front--light`]: theme === THEMES.light,\n      [`${ns}__side__front--dark`]: theme === THEMES.dark,\n    },\n  );\n\n  const sideBackClassNames = cx(\n    `${ns}__side`,\n    `${ns}__side__back`,\n    {\n      [`${ns}__side__back--light`]: theme === THEMES.light,\n      [`${ns}__side__back--dark`]: theme === THEMES.dark,\n    },\n  );\n\n  const colorGradient2 = getColor('--color-gradient2');\n  const colorGradient4 = getColor('--color-gradient4');\n  const colorScPink = getColor('--color-sc-pink');\n  const colorScOrange = getColor('--color-sc-orange');\n\n  const bottomColor = theme === THEMES.light ? colorScPink : colorGradient4;\n  const topColor = theme === THEMES.light ? colorScOrange : colorGradient2;\n\n  return (\n    <div className={ns}>\n      <div className={sideFrontClassNames}>\n        <div className={`${ns}__side__front__heading-wrapper`}>\n          <Heading bottomColor={bottomColor} topColor={topColor} />\n        </div>\n        <Logo alt=\"styled-components logo\" src=\"images/sc-logo.png\" />\n        <Details>\n          <span>Automatic critical CSS </span>\n          <span>No class name bugs</span>\n          <span>Easier deletion of CSS</span>\n          <span>Simple dynamic styling</span>\n          <span>Painless maintenance</span>\n          <span>Automatic vendor prefixing</span>\n        </Details>\n        <div className={`${ns}__side__front__buttons-bottom`}>\n          <LinkButton href=\"https://www.styled-components.com/docs/\" target=\"_blank\" variant={LINK_BUTTON_VARIANTS.transparentDark}>Documentation</LinkButton>\n        </div>\n      </div>\n      <div className={sideBackClassNames}>\n        <div className={`${ns}__side__back__buttons-centered`}>\n          <LinkButton href=\"https://github.com/styled-components/styled-components\" target=\"_blank\">Github</LinkButton>\n          <LinkButton href=\"https://www.styled-components.com/docs/\" target=\"_blank\" variant={LINK_BUTTON_VARIANTS.transparent}>Documentation</LinkButton>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nCard.displayName = displayName;\nCard.propTypes = propTypes;\n\nexport default withTheme(Card);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\n\nimport { THEMES } from '../styles/variables';\n\nimport './ThemeSwitcher.css';\n\nconst ns = 'theme-switcher';\nconst displayName = 'ThemeSwitcher';\n\nconst propTypes = {\n  onThemeChange: PropTypes.func.isRequired,\n  theme: PropTypes.string.isRequired,\n};\n\nconst ThemeSwitcher = ({ theme, onThemeChange }) => {\n  const switchClassNames = cx(\n    [`${ns}__switch`],\n    {\n      [`${ns}__switch--dark`]: theme === THEMES.dark,\n      [`${ns}__switch--light`]: theme === THEMES.light,\n    },\n  );\n  return (\n    <div className={ns}>\n      <div className={switchClassNames} onClick={onThemeChange} />\n    </div>\n  );\n};\n\nThemeSwitcher.displayName = displayName;\nThemeSwitcher.propTypes = propTypes;\n\nexport default ThemeSwitcher;\n","import React, { Component } from 'react';\nimport cx from 'classnames';\n\nimport Card from './components/Card';\nimport ThemeSwitcher from './components/ThemeSwitcher';\n\nimport { ThemeProvider } from './utils/themeContext';\nimport { THEMES } from './styles/variables';\n\nimport './styles/normalize.css';\nimport './styles/global.css';\nimport './App.css';\n\nconst displayName = 'App';\nconst ns = 'app';\n\nclass App extends Component {\n  state = {\n    theme: THEMES.light,\n  }\n\n  handleThemeChange = () => {\n    this.setState(prevState => ({\n      theme: prevState.theme === THEMES.dark ? THEMES.light : THEMES.dark,\n    }));\n  }\n\n  render() {\n    const { theme } = this.state;\n    const classNames = cx(\n      ns,\n      {\n        [`${ns}--light`]: theme === THEMES.light,\n        [`${ns}--dark`]: theme === THEMES.dark,\n      },\n    );\n\n    return (\n      <ThemeProvider value={theme}>\n        <div className={classNames}>\n          <Card />\n          <ThemeSwitcher onThemeChange={this.handleThemeChange} theme={theme} />\n        </div>\n      </ThemeProvider>\n    );\n  }\n}\n\nApp.displayName = displayName;\n\nexport default App;\n","/* globals window */\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, window.document.getElementById('root'));\n"],"sourceRoot":""}